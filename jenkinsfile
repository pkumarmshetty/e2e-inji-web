pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/pkumarmshetty/e2e-inji-web.git'
        GIT_BRANCH = 'test' 
        DOCKER_IMAGE_BASE = 'raparna154/inji-web-service'
    }

    stages {
        stage('Clean Workspace') {
            steps {
                sh 'rm -rf e2e-inji-web || true'
            }
        }

        stage('Clone Repository') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'githubpat2', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_TOKEN')]) {
                        sh """
                        git clone https://${GIT_USER}:${GIT_TOKEN}@github.com/pkumarmshetty/e2e-inji-web.git
                        cd e2e-inji-web
                        git checkout ${GIT_BRANCH}
                        """
                    }
                }
            }
        }

        stage('Get Commit Hash') {
            steps {
                script {
                    env.COMMIT_HASH = sh(
                        script: "cd e2e-inji-web && git rev-parse --short HEAD",
                        returnStdout: true
                    ).trim()
                    env.DOCKER_IMAGE = "${DOCKER_IMAGE_BASE}:${env.COMMIT_HASH}-${env.BUILD_NUMBER}"
                    echo "Docker Image Tag: ${env.DOCKER_IMAGE}"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dir('e2e-inji-web/inji-web') {
                        sh """
                        docker build -t ${env.DOCKER_IMAGE} .
                        """
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhubpat', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh """
                        echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
                        docker push ${env.DOCKER_IMAGE}
                        docker logout
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline completed successfully! Pushed Docker Image: ${env.DOCKER_IMAGE}"
        }
        failure {
            echo "Failed! Last attempted Docker Image Tag: ${env.DOCKER_IMAGE}"
        }
    }
}
